#############################################################################
# Makefile for building: client
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fri Jul 8 21:02:41 2011
# Project:  client.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -unix -o Makefile client.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)   -lQtGui -lQtNetwork -lQtCore -lpthread -lsfml-graphics -lsfml-window -lsfml-system -L /usr/lib/ -lX11 -llua -lluabind
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bucketsingleton.cpp \
		Core.cpp \
		Gui.cpp \
		iaclientsingleton.cpp \
		IARessources.cpp \
		main.cpp \
		Observable.cpp \
		Observer.cpp \
		TcpSocket.cpp \
		Widget.cpp moc_Gui.cpp \
		moc_TcpSocket.cpp \
		moc_Widget.cpp
OBJECTS       = bucketsingleton.o \
		Core.o \
		Gui.o \
		iaclientsingleton.o \
		IARessources.o \
		main.o \
		Observable.o \
		Observer.o \
		TcpSocket.o \
		Widget.o \
		moc_Gui.o \
		moc_TcpSocket.o \
		moc_Widget.o
DIST          = /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		client.pro
QMAKE_TARGET  = client
DESTDIR       = 
TARGET        = client

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: client.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile client.pro
/usr/lib/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile client.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/client1.0.0 || $(MKDIR) .tmp/client1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/client1.0.0/ && $(COPY_FILE) --parents bucketsingleton.hpp Core.hh Gui.hh iaclientsingleton.hpp IARessources.hh IObserver.hh Observable.hh TcpSocket.hh Widget.hh .tmp/client1.0.0/ && $(COPY_FILE) --parents bucketsingleton.cpp Core.cpp Gui.cpp iaclientsingleton.cpp IARessources.cpp main.cpp Observable.cpp Observer.cpp TcpSocket.cpp Widget.cpp .tmp/client1.0.0/ && (cd `dirname .tmp/client1.0.0` && $(TAR) client1.0.0.tar client1.0.0 && $(COMPRESS) client1.0.0.tar) && $(MOVE) `dirname .tmp/client1.0.0`/client1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/client1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Gui.cpp moc_TcpSocket.cpp moc_Widget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Gui.cpp moc_TcpSocket.cpp moc_Widget.cpp
moc_Gui.cpp: Widget.hh \
		Observable.hh \
		IObserver.hh \
		Gui.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) Gui.hh -o moc_Gui.cpp

moc_TcpSocket.cpp: Observable.hh \
		IObserver.hh \
		TcpSocket.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) TcpSocket.hh -o moc_TcpSocket.cpp

moc_Widget.cpp: Widget.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) Widget.hh -o moc_Widget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bucketsingleton.o: bucketsingleton.cpp bucketsingleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bucketsingleton.o bucketsingleton.cpp

Core.o: Core.cpp Core.hh \
		IObserver.hh \
		Observable.hh \
		IARessources.hh \
		iaclientsingleton.hpp \
		bucketsingleton.hpp \
		Gui.hh \
		Widget.hh \
		TcpSocket.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Core.o Core.cpp

Gui.o: Gui.cpp Gui.hh \
		Widget.hh \
		Observable.hh \
		IObserver.hh \
		bucketsingleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Gui.o Gui.cpp

iaclientsingleton.o: iaclientsingleton.cpp iaclientsingleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o iaclientsingleton.o iaclientsingleton.cpp

IARessources.o: IARessources.cpp IARessources.hh \
		iaclientsingleton.hpp \
		Observable.hh \
		IObserver.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o IARessources.o IARessources.cpp

main.o: main.cpp Core.hh \
		IObserver.hh \
		Observable.hh \
		IARessources.hh \
		iaclientsingleton.hpp \
		bucketsingleton.hpp \
		Gui.hh \
		Widget.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Observable.o: Observable.cpp Observable.hh \
		IObserver.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Observable.o Observable.cpp

Observer.o: Observer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Observer.o Observer.cpp

TcpSocket.o: TcpSocket.cpp TcpSocket.hh \
		Observable.hh \
		IObserver.hh \
		bucketsingleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpSocket.o TcpSocket.cpp

Widget.o: Widget.cpp Gui.hh \
		Widget.hh \
		Observable.hh \
		IObserver.hh \
		bucketsingleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Widget.o Widget.cpp

moc_Gui.o: moc_Gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Gui.o moc_Gui.cpp

moc_TcpSocket.o: moc_TcpSocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_TcpSocket.o moc_TcpSocket.cpp

moc_Widget.o: moc_Widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Widget.o moc_Widget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

